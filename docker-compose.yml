services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: userdb  # Change this to the name of your application's database
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Ab123456
    ports:
      - "5433:5432"
    networks:
      - assignment-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"   # RabbitMQ service port
      - "15672:15672" # RabbitMQ management UI
    networks:
      - assignment-network
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/userdb  # Reflect the change in database name here
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: Ab123456
      SPRING_PROFILES_ACTIVE: docker

      # RabbitMQ Configuration
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest

    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - assignment-network

networks:
  assignment-network:
    driver: bridge
